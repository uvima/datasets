---
title: 'Cluster K-Means: desigualdad_CCAA'
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", warning = FALSE, message = FALSE)


# fig.align= 'center para que nos centre todas figuras que se muestran
# warning = FALSE para que no muestre mensajes de warning
# message = FALSE para que no muestre mensajes automáticos cuando carga paquetes y demás en el output
```

# Introducción

## dataset

En este cuaderno vamos a analizar el dataset llamado
[*desigualdad_CCAA.xlsx*](../../../files/desigualdad_CCAA.xlsx).
Este dataset presenta un conjunto de datos sobre el salario medio anual de hombres y mujeres en España, relativos a años 2017/18. Los datos (relativos a las variables *salario medio mujeres, hombres* que nos interesan) han sido 
extraidos de la **Operación**  **Encuesta Anual de Estructura Salarial** (IOE 30189), que se encuentra dentro de la temática Mercado laboral y salarios.
Concretamente en este dataset tenemos las siguientes variables (que nos interesan para este análisis):

-   **CCAA**: Comunidades Autónomas.
-   **Salmedmuj**:	Salario medio anual (mujeres).
-   **Salmedhom**:	Salario medio anual (hombres).

El objetivo de este estudio será aplicar un Análisis **Cluster** para
hacer grupos de comunidades autónomas en función de las variables
**Salmedmuj** y **Salmedhom**. Concretamente usaremos un cluster K Means.

```{r}
#| label: librerias
#| message: false
#| warning: false
# Librerias
library(readxl) # Para leer los excels
library(dendextend) # Para dendogramas
library(dplyr) # Para tratamiento de dataframes
library(ggplot2) # Nice plots
library(stats) # hclust package

library(factoextra) # fviz_cluster function
```

Cargamos entonces el conjunto de datos:

```{r}
#| label: cargar_datos
datos <- read_excel("../../../files/desigualdad_CCAA.xlsx", sheet = "Datos")
```




## Descripción del trabajo a realizar

**(Esto irá en la web de explica)** Se pretende hacer un Análisis
Cluster empleando el procedimiento Cluster Jerárquico de las **CCAA** en
función a las variables **Salmedmuj** y **Salmedhom** para grupar las comunidades por las diferencias de salarios entre sexos.

-   Hacer un análisis exploratorio.Ver si hay NA's y si es necesario escalar los datos.
-   Variables sobre las que se buscan cluster (*Salmedmuj*, *Salmedhom*).
- Estandarizar datos y probar cluster k-means con k=4.
-  Interpretar resultados.
-  Ver métodos Elbrow y Silhouette si hay otro número óptimo de clusters y en ese caso repetir el estudio.


# Análisis Exploratorio (EDA[^1])

[^1]: EDA viene del Inglés *Exploratory Data Analysis* y son los pasos
    relativos en los que se exploran las variables para tener una idea
    de que forma toma el dataset.

Lo primero de todo vamos a cargar las librearias necesarias para
ejecutar el resto del código del trabajo:


# Clustering: Cluster K-means

## Introducción

El **Análisis de clúster** es una técnica de aprendizaje no supervisado
que agrupa datos similares en conjuntos, llamados clústeres. El objetivo
es dividir un conjunto de datos en grupos homogéneos, donde los miembros
de cada grupo son más similares entre sí que con los miembros de otros
grupos, según algún criterio de similitud predefinido.

Concretamente, el **Cluster K-Means**  define clusters de modo que se **minimice la variación total dentro del grupo** de acuerdo con el algoritmo Hartigan-Wong (Hartigan y Wong 1979), que define la variación total dentro del grupo como la suma de las distancias al cuadrado de las distancias euclidianas entre elementos y el centroide correspondiente. Se describe a continuación.


Los pasos generales de este algoritmo son:

1. **Especificar** el número de clusters (K) que se se desean obtener.
2. **Seleccionar aleatoriamente k** objetos del conjunto de datos como centros del grupo (centroides).
Asigna cada observación a su centroide más cercano, según la distancia euclidiana entre el objeto y el centroide.
3. Para cada uno de los k grupos, **actualizar el centroide** del grupo calculando los nuevos valores medios de todos los puntos de datos del grupo. El **centoide de un grupo K-ésimo es** un vector de longitud p que contiene las medias de todas las variables para las observaciones en el grupo K-ésimo; p es el número de variables.

4. **Minimizar iterativamente** el total dentro de la suma del cuadrado. Es decir, repetir los pasos 3 y 4 hasta que las asignaciones del clúster dejen de cambiar o se alcance el número máximo de iteraciones. De forma predeterminada, el software R utiliza 10 como valor predeterminado para el número máximo de iteraciones.

*Véase funciones de R stats::kmeans(x, centers, iter.max, nstart) que realizan los pasos 2-5 automáticamente.*


# Modelo

## Formulación

**IMPORTANTE**: 
 
-   Ver que no hay ningún **NA** en el dataset.
-    El **escalado** es un paso esencial en la fase de preprocesamiento de datos para los algoritmos de agrupación. Garantiza que cada característica contribuya por igual al proceso de decisión del algoritmo, lo que lleva a resultados de agrupación más precisos e interpretables.

```{r}
#| label: factor
ifelse(sum(is.na(data)) == 0, print("There is no NA in the dataset."), print("There is some NA in the dataset."))
```

Si quueremos que el código sea reproducible, es necesario fijar semilla (función `set.seed(n)`) ya que el algoritmo *k-means*  elige los centroides iniciales aleatoriamente.


```{r}
# Preparación de los datos
resultado <- datos[, c("Salmedmuj", "Salmedhom")]


resultado <- scale(resultado) # scaling/standardizing
rownames(resultado) <- datos$CCAA # Para que nos salgan luego los nombres
comunidades <- datos$CCAA


# K-MEANS algortihm
set.seed(785248) # reproducibilidad
k1 <- kmeans(resultado, centers = 4, nstart = 25)
k1
fviz_cluster(k1, data = resultado) # plot
```

Podemos observar que la agrupación en 3 clusters que ha hecho el algortimo K-MEANS es bastante similar a la que obtuvimos con el cluster jerárquico. Por un lado tenemos un clsuter de los valroes que se encuentran más a la derecha, luego otro con los que están más arriba y otros con los más cercanos al origen. En cierto modo:

-   Los **cluster rojo y morado** representa las CCAA donde el salario de hombres y mujeres es más alto de todo España. 

-   El **cluster azul** representa las CCAA donde los salarios de hombres y mujeres se encuentran en valores moderados, es decir, ni en los valores más altos del país ni en los más bajos.
- Por último, el **cluster verde** presenta comunidades que presentar unos salarios mucho más bajos en comparación con el resto.




#  Número Clusters Óptimo

Encontrar el número óptimo de clusters implica identificar la cantidad ideal de grupos en los que se pueden dividir los datos de manera significativa y coherente. Es crucial porque determina la calidad y utilidad de los resultados del análisis de agrupamiento.

## Método Elbrow


Una de las formas comunes de determinar este número es a través del método del **codo** o **elbow** en inglés. Este método busca identificar el punto donde la adición de más clusters ya no proporciona un beneficio significativo en la varianza explicada o la cohesión dentro de los grupos.


Al representar la variación explicada en función del número de clusters, observamos un **gráfico** que se asemeja a la **forma** de un codo. A medida que aumentamos el número de clusters, la varianza explicada tiende a disminuir. El punto en el que esta disminución se estabiliza o se aplana marca el número óptimo de clusters, indicando un equilibrio entre una mayor partición (más clusters) y una adecuada interpretabilidad de los grupos.


```{r}
#  Método Elbrow
set.seed(785248)
factoextra::fviz_nbclust(resultado, kmeans, method = "wss",print.summary = TRUE)
```

El número óptimo de k parece ser 2 que es donde más se reduce la pendiente y la variabilidad explicada no parece disminuir de forma tan rápida. De todos modos, también podría parecer razonable tomar el 3 o el 4. Es por ello que vamos a usar algún método adicional. 

## Método Silhouette


El **método Silhouette** es una técnica utilizada para determinar la calidad de la agrupación en un conjunto de datos. Consiste en calcular el valor de la silueta para cada punto de datos, que mide qué tan similar es un punto a su propio grupo (cohesión) en comparación con otros grupos vecinos (separación).

El proceso implica:

1. **Cálculo de la silueta individual**: Para cada punto de datos, se calcula la silueta, que es la diferencia entre la distancia media intra-cluster (distancia al resto de puntos en su mismo grupo) y la distancia media al cluster más cercano (distancia a los puntos del grupo más próximo, excluyendo el propio grupo).

2. **Valor de la silueta global**: Se obtiene el promedio de las siluetas individuales de todos los puntos de datos en el conjunto. Contra más cercano a 1, mejor formado estará el clsuter.


La siguiente función generará un gráfico que muestra los valores de Silhouette en función del número de clusters. El número óptimo de clusters es típicamente aquel que maximiza el valor de Silhouette, representando una mejor cohesión intra-cluster y separación inter-cluster.


```{r}
#  Método Silhouette
set.seed(785248)
factoextra::fviz_nbclust(resultado, kmeans, method = "silhouette")
```



Este método nos reafirma que el número óptimo es 2 puesto que es el caso cuyos clusters maximiza el valor de Silhouette, representando una mejor cohesión intra-cluster y separación inter-cluster.


**NOTA**: Ahora podríamos repetir el estudio anterior con el número de clusters igual a 5 e intentar analizar de neuvo los resultados.
# Conclusiones

Aquí se han explicado los supuestos del K-MEANS clustering por medio de un dataset que contiene el salario medio entre hombres y mujeres por comunidades autónomas.

